//@version=6
strategy('RSI_L_S_BEP_Optimizer_Report', overlay = true, default_qty_type = strategy.percent_of_equity, default_qty_value = 100, initial_capital = 100)

// ===================== RSI Ayarları =====================
src = input(close, 'RSI Source')
rsiLen = input(9, 'RSI Length')
rsiOver = input(68, 'RSI Overbought')
rsiUnder = input(31, 'RSI Oversold')
rsiVal = ta.rsi(src, rsiLen)

// ===================== Leverage =====================
leverage = input.int(1, 'Leverage (X)', minval = 1)
qty = math.round(strategy.equity * leverage / close)

// ===================== Trail Stop Optimizasyon Parametreleri =====================
trail_start = input.float(0.5, 'Trail Start %', step = 0.1) * 0.01
trail_end = input.float(2.0, 'Trail End %', step = 0.1) * 0.01
trail_step = input.float(0.1, 'Trail Step %', step = 0.01) * 0.01

offset_start = input.float(0.02, 'Offset Start %', step = 0.01) * 0.01
offset_end = input.float(0.1, 'Offset End %', step = 0.01) * 0.01
offset_step = input.float(0.01, 'Offset Step %', step = 0.01) * 0.01

// ===================== Giriş Koşulları =====================
longEntry = ta.crossover(rsiVal, rsiOver)
shortEntry = ta.crossunder(rsiVal, rsiUnder)

// ===================== Optimizasyon Değişkenleri =====================
var float bestProfit = na
var float bestTrail = na
var float bestOffset = na
var int bestTrades = na
var float bestWinRate = na
var float bestMaxDD = na

// ===================== Trail Stop ve Offset Optimizasyonu =====================
for tp = trail_start to trail_end by trail_step
    for off = offset_start to offset_end by offset_step
        // Giriş sinyalleri
        if longEntry
            strategy.entry('LONG', strategy.long, qty = qty)
        if shortEntry
            strategy.entry('SHORT', strategy.short, qty = qty)

        // Pozisyon yönetimi
        if strategy.position_size > 0
            trailPts = strategy.position_avg_price * tp / syminfo.mintick
            offsetPts = strategy.position_avg_price * off / syminfo.mintick
            strategy.exit(id = 'L-Trail', trail_points = trailPts, trail_offset = offsetPts)

        if strategy.position_size < 0
            trailPts = strategy.position_avg_price * tp / syminfo.mintick
            offsetPts = strategy.position_avg_price * off / syminfo.mintick
            strategy.exit(id = 'S-Trail', trail_points = trailPts, trail_offset = offsetPts)

        // Performans analizi
        currentProfit = strategy.netprofit
        currentTrades = strategy.closedtrades
        currentWinRate = strategy.wintrades / math.max(currentTrades, 1) * 100
        currentMaxDD = strategy.max_drawdown
        
        // En iyi performansı kontrol et
        if na(bestProfit) or currentProfit > bestProfit
            bestProfit := currentProfit
            bestTrail := tp
            bestOffset := off
            bestTrades := currentTrades
            bestWinRate := currentWinRate
            bestMaxDD := currentMaxDD

// ===================== Sonuç Raporu =====================
if barstate.islast
    mainLabel = '🎯 TRAIL STOP OPTIMIZATION RESULTS 🎯\n═══════════════════════════════════\n📊 Best Parameters:\n• Trail Stop: ' + str.tostring(bestTrail * 100, '#.##') + '%\n• Offset: ' + str.tostring(bestOffset * 100, '#.##') + '%\n• RSI Length: ' + str.tostring(rsiLen) + '\n• RSI Overbought: ' + str.tostring(rsiOver) + '\n• RSI Oversold: ' + str.tostring(rsiUnder) + '\n═══════════════════════════════════\n💰 Performance:\n• Net Profit: $' + str.tostring(bestProfit, '#.##') + '\n• Total Trades: ' + str.tostring(bestTrades) + '\n• Win Rate: ' + str.tostring(bestWinRate, '#.##') + '%\n• Max Drawdown: ' + str.tostring(bestMaxDD, '#.##') + '%\n═══════════════════════════════════\n📈 Optimization Complete!\nUse Strategy Tester for detailed analysis.'
    
    label.new(bar_index, high, mainLabel, 
              style = label.style_label_down, 
              color = color.yellow, 
              textcolor = color.black,
              size = size.normal)
    
    // Performans uyarıları
    if bestWinRate < 50
        alertLabel = '⚠️ LOW WIN RATE WARNING ⚠️\nWin Rate: ' + str.tostring(bestWinRate, '#.##') + '%\nConsider adjusting parameters!'
        label.new(bar_index, high * 0.95, alertLabel, 
                  style = label.style_label_down, 
                  color = color.red, 
                  textcolor = color.white,
                  size = size.small)
    
    if bestMaxDD > 20
        ddLabel = '🚨 HIGH DRAWDOWN WARNING 🚨\nMax DD: ' + str.tostring(bestMaxDD, '#.##') + '%\nRisk too high!'
        label.new(bar_index, high * 0.90, ddLabel, 
                  style = label.style_label_down, 
                  color = color.orange, 
                  textcolor = color.white,
                  size = size.small)
